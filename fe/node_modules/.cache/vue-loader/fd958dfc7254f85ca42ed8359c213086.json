{"remainingRequest":"/home/uli/work/expector/fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/uli/work/expector/fe/src/components/SingleRun.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/uli/work/expector/fe/src/components/SingleRun.vue","mtime":1617370856968},{"path":"/home/uli/work/expector/fe/node_modules/cache-loader/dist/cjs.js","mtime":1616852117104},{"path":"/home/uli/work/expector/fe/node_modules/babel-loader/lib/index.js","mtime":1616852117104},{"path":"/home/uli/work/expector/fe/node_modules/cache-loader/dist/cjs.js","mtime":1616852117104},{"path":"/home/uli/work/expector/fe/node_modules/vue-loader/lib/index.js","mtime":1616852117073}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NpbmdsZVJ1bicsCiAgcHJvcHM6IFsnYnVzJ10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJ1bmlkOiAnJywKICAgICAgY291bnQ6IDAsCiAgICAgIHRlc3Q6IDAsCiAgICAgIG1lc3NhZ2U6ICdUVCcsCiAgICAgIG1ldHJpY3M6IG51bGwsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcnVuQ2hhbmdlZChkYXRhKSB7CiAgICAgIGNvbnNvbGUuaW5mbygnU2luZ2xlUnVuIHJ1bkNoYW5nZWQnKTsKICAgICAgdGhpcy5ydW5pZCA9IGRhdGE7CiAgICAgIHRoaXMuZ2V0TWVzc2FnZSgpOwogICAgfSwKICAgIGdldE1lc3NhZ2UoKSB7CiAgICAgIGNvbnN0IHBhdGggPSBgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2dldFJ1bkRhdGEvJHt0aGlzLnJ1bmlkfWA7CiAgICAgIGlmICh0aGlzLnJ1bmlkICE9PSAnJykgewogICAgICAgIGF4aW9zCiAgICAgICAgICAuZ2V0KHBhdGgpCiAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgICAgICBjb25zb2xlLmVycm9yKHJlcy5kYXRhKTsKICAgICAgICAgICAgdGhpcy5tZXRyaWNzID0gcmVzLmRhdGE7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICBjb25zb2xlLmVycm9yKCdTaW5nbGVSdW4gbW91bnRlZCcpOwogICAgdGhpcy5idXMuJG9uKCdzdWJtaXQnLCB0aGlzLmdldE1lc3NhZ2UpOwogICAgdGhpcy5idXMuJG9uKCdydW5DaGFuZ2VkJywgdGhpcy5ydW5DaGFuZ2VkKTsKICB9LAp9Owo="},{"version":3,"sources":["SingleRun.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SingleRun.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"border\">\n    <h1>Run Name: {{ runid }}</h1>\n    <b-button v-b-toggle.collapse-1>Show Steps</b-button>\n    <b-card v-for=\"item in metrics\" :key=\"item.name\" :title=\"item.name\">\n      <b-card-text>\n        <b-badge v-if=\"item.finished\" variant=\"success\">Finished</b-badge>\n        <b-badge v-else variant=\"info\">Active</b-badge>\n\n        <p v-if=\"item.finished == false\">\n          Waiting for {{ item.currentStep.sensorName }} to become\n          {{ item.currentStep.expectedValue }}\n        </p>\n        Hello\n        <b-collapse id=\"collapse-1\" class=\"mt-2\">\n          <b-card>\n            <b-list-group v-for=\"step in item.steps\" :key=\"step.counter\">\n              <b-list-group-item\n                >{{ step.sensorName }} = &gt;{{ step.result }}&lt; ( expected:\n                {{ step.expectedValue }} )</b-list-group-item\n              >\n            </b-list-group>\n          </b-card>\n        </b-collapse>\n        <b-card>\n          {{ item.whendone }}\n        </b-card>\n      </b-card-text>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'SingleRun',\n  props: ['bus'],\n  data() {\n    return {\n      runid: '',\n      count: 0,\n      test: 0,\n      message: 'TT',\n      metrics: null,\n    };\n  },\n  methods: {\n    runChanged(data) {\n      console.info('SingleRun runChanged');\n      this.runid = data;\n      this.getMessage();\n    },\n    getMessage() {\n      const path = `http://localhost:5000/getRunData/${this.runid}`;\n      if (this.runid !== '') {\n        axios\n          .get(path)\n          .then((res) => {\n            // eslint-disable-next-line\n            console.error(res.data);\n            this.metrics = res.data;\n          })\n          .catch((error) => {\n            // eslint-disable-next-line\n            console.error(error);\n          });\n      }\n    },\n  },\n  mounted() {\n    console.error('SingleRun mounted');\n    this.bus.$on('submit', this.getMessage);\n    this.bus.$on('runChanged', this.runChanged);\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}